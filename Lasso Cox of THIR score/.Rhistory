install.packages("C:/Users/Administrator/Downloads/future_1.34.0.tar.gz", repos = NULL, type = "source")
install.packages("E:/future_1.34.0.tar.gz", repos = NULL, type = "source")
install.packages("E:/future_1.34.0.zip", repos = NULL, type = "source")
library(future)
install.packages("parallelly")
library(future)
install.packages("E:/parallelly_1.38.0.zip", repos = NULL, type = "source")
install.packages("E:/parallelly_1.38.0.tar.gz", repos = NULL, type = "source")
install.packages("parallelly_1.38.0")
library(timeROC)
install.packages('installr')
library(installr)
updateR()
install.packages('installr')
install.packages("installr")
library(installr)
updateR()
#计算不同位置不同maker的p值，用补全后的数据，未挑选显著maker；
rm(list = ls())
library(ggpubr)
library(survminer)
library(survival)
library(glmnet)
library(survivalROC)
library(timeROC)
packageVersion("parallelly")
install.packages("parallelly")
library(timeROC)
install.packages("parallelly")
library(timeROC)
install.packages("parallelly_1.38.0")
library(timeROC)
old.packages()
update.packages()
update.packages(parallelly)
update.packages(“parallelly”)
update.packages("parallelly")
update.packages("parallelly")
packageVersion("parallelly")
version
version
packageVersion("parallelly")
library(timeROC)
#计算不同位置不同maker的p值，用补全后的数据，未挑选显著maker；
rm(list = ls())
library(ggpubr)
library(survminer)
library(survival)
library(glmnet)
library(survivalROC)
library(timeROC)
set.seed(1)
setwd("C:/Users/Pomelong/Nutstore/1/我的坚果云/项目/尝试新的lasso/免疫标记物从肿瘤浸润到健康")
list.files = list.files(pattern="all fea data*")
method = 'RFS';
data = read.csv(list.files[1])
data = data.matrix(data)
s1 = nrow(data)
s2 = ncol(data)
if (method == 'OS'){
mySurv = Surv(data[, 1], data[, 2]);
}else{
mySurv = Surv(data[, 3], data[, 4]);
}
x = data[, 5:s2]
# 10-fold CV
set.seed(1)
cvfit = cv.glmnet(x, mySurv, family = "cox", type.measure = "C")
beta = coef(cvfit, s = "lambda.min")
print(c(15,length(which(beta!=0))))
pred = predict(cvfit, newx = x, s = "lambda.min", type="response")
data = data[,-(6:19)]
data[,5] = pred
if (method == 'OS'){
mySurv = Surv(data[,1], data[,2]);
}else{
mySurv = Surv(data[,3], data[,4]);
}
group = as.numeric(data[,5])
mv = median(group);
group = ifelse(group >= mv, '2', '1');
log1 = survdiff(mySurv ~ group);
p1 = pchisq(log1$chisq, 1, lower.tail=FALSE);
print(p1)
if (method == 'OS'){
quantile = quantile(data[,1])
sROC <-timeROC(T=data[,1],delta = data[,2],marker = data[,5],
cause = 1,times = c(quantile[2],quantile[3],quantile[4]),ROC=T)
png(filename = "英文tag/OS lasso_timeroc.png", width = 8, height = 8,
units = "cm", res = 300, pointsize = 7)
}else{
quantile = quantile(data[,3])
sROC <-timeROC(T=data[,3],delta = data[,4],marker = data[,5],
cause = 1,times = c(quantile[2],quantile[3],quantile[4]),ROC=T)
png(filename = "英文tag/RFS lasso_timeroc.png", width = 8, height = 8,
units = "cm", res = 300, pointsize = 7)
}
if (method == 'OS'){
quantile = quantile(data[,1])
sROC <-timeROC(T=data[,1],delta = data[,2],marker = data[,5],
cause = 1,times = c(quantile[2],quantile[3],quantile[4]),ROC=T)
png(filename = "KM/OS lasso_timeroc.png", width = 8, height = 8,
units = "cm", res = 300, pointsize = 7)
}else{
quantile = quantile(data[,3])
sROC <-timeROC(T=data[,3],delta = data[,4],marker = data[,5],
cause = 1,times = c(quantile[2],quantile[3],quantile[4]),ROC=T)
png(filename = "KM/RFS lasso_timeroc.png", width = 8, height = 8,
units = "cm", res = 300, pointsize = 7)
}
par(mar= c(5,5,5,5),cex.lab=1.5,cex.axis=1.2) #设置图形边界
plot(sROC,time=quantile[2],col="cyan3",title=F,lwd=2) #1年ROC
plot(sROC,time=quantile[3],col="green",add=T,title=F,lwd=2) #3年ROC
plot(sROC,time=quantile[4],col="salmon",add=T,title=F,lwd=2) #5年ROC
if (method == 'OS'){
legend("bottomright", # 这里设置legend的位置坐标：横坐标0,纵坐标1。也可以像前面一样设置为"bottomright"等
c(paste0("AUC 25%-OS  ", round(sROC$AUC[1], 2)),
paste0("AUC 50%-OS  ", round(sROC$AUC[2], 2)),
paste0("AUC 75%-OS  ", round(sROC$AUC[3], 2))),
col=c("cyan3","green","salmon"),lwd=2,cex=1.2,bty="n")
title("Time-ROC (OS)",cex.main = 1.5)
}else{
legend("bottomright", # 这里设置legend的位置坐标：横坐标0,纵坐标1。也可以像前面一样设置为"bottomright"等
c(paste0("AUC 25%-RFS  ", round(sROC$AUC[1], 2)),
paste0("AUC 50%-RFS  ", round(sROC$AUC[2], 2)),
paste0("AUC 75%-RFS  ", round(sROC$AUC[3], 2))),
col=c("cyan3","green","salmon"),lwd=2,cex=1.2,bty="n")
title("Time-ROC (RFS)",cex.main = 1.5)
}
dev.off()
print(sROC$AUC)
#计算不同位置不同maker的p值，用补全后的数据，未挑选显著maker；
rm(list = ls())
library(ggpubr)
library(survminer)
library(survival)
library(glmnet)
library(survivalROC)
library(timeROC)
set.seed(1)
setwd("C:/Users/Pomelong/Nutstore/1/我的坚果云/项目/尝试新的lasso/免疫标记物从肿瘤浸润到健康")
list.files = list.files(pattern="all fea data*")
#遍历文件夹；
method = 'OS';
#1:OS,2:RFS;
data = read.csv(list.files[1])
data = data.matrix(data)
s1 = nrow(data)
s2 = ncol(data)
if (method == 'OS'){
mySurv = Surv(data[, 1], data[, 2]);
}else{
mySurv = Surv(data[, 3], data[, 4]);
}
x = data[, 5:s2]
# 10-fold CV
set.seed(1)
cvfit = cv.glmnet(x, mySurv, family = "cox", type.measure = "C")
beta = coef(cvfit, s = "lambda.min")
print(c(15,length(which(beta!=0))))
#lasso_select[num, c(1:length(which(beta!=0)))] = which(beta!=0)
#lasso挑选特征；
# Xbeta = numeric(s1)
# for(j in 1:s1){
#   Xbeta[j] = sum(x[j, ] * beta)
# }
# group = cbind(numeric(s1))
# group = (Xbeta >= median(Xbeta)) + 1
#求出系数，线性组合；
pred = predict(cvfit, newx = x, s = "lambda.min", type="response")
data = data[,-(6:19)]
data[,5] = pred
if (method == 'OS'){
mySurv = Surv(data[,1], data[,2]);
}else{
mySurv = Surv(data[,3], data[,4]);
}
group = as.numeric(data[,5])
mv = median(group);
group = ifelse(group >= mv, '2', '1');
log1 = survdiff(mySurv ~ group);
p1 = pchisq(log1$chisq, 1, lower.tail=FALSE);
print(p1)
#取中位数，计算p值；
if (method == 'OS'){
quantile = quantile(data[,1])
sROC <-timeROC(T=data[,1],delta = data[,2],marker = data[,5],
cause = 1,times = c(quantile[2],quantile[3],quantile[4]),ROC=T)
png(filename = "KM/OS lasso_timeroc.png", width = 8, height = 8,
units = "cm", res = 300, pointsize = 7)
}else{
quantile = quantile(data[,3])
sROC <-timeROC(T=data[,3],delta = data[,4],marker = data[,5],
cause = 1,times = c(quantile[2],quantile[3],quantile[4]),ROC=T)
png(filename = "KM/RFS lasso_timeroc.png", width = 8, height = 8,
units = "cm", res = 300, pointsize = 7)
}
par(mar= c(5,5,5,5),cex.lab=1.5,cex.axis=1.2) #设置图形边界
plot(sROC,time=quantile[2],col="cyan3",title=F,lwd=2) #1年ROC
plot(sROC,time=quantile[3],col="green",add=T,title=F,lwd=2) #3年ROC
plot(sROC,time=quantile[4],col="salmon",add=T,title=F,lwd=2) #5年ROC
if (method == 'OS'){
legend("bottomright", # 这里设置legend的位置坐标：横坐标0,纵坐标1。也可以像前面一样设置为"bottomright"等
c(paste0("AUC 25%-OS  ", round(sROC$AUC[1], 2)),
paste0("AUC 50%-OS  ", round(sROC$AUC[2], 2)),
paste0("AUC 75%-OS  ", round(sROC$AUC[3], 2))),
col=c("cyan3","green","salmon"),lwd=2,cex=1.2,bty="n")
title("Time-ROC (OS)",cex.main = 1.5)
}else{
legend("bottomright", # 这里设置legend的位置坐标：横坐标0,纵坐标1。也可以像前面一样设置为"bottomright"等
c(paste0("AUC 25%-RFS  ", round(sROC$AUC[1], 2)),
paste0("AUC 50%-RFS  ", round(sROC$AUC[2], 2)),
paste0("AUC 75%-RFS  ", round(sROC$AUC[3], 2))),
col=c("cyan3","green","salmon"),lwd=2,cex=1.2,bty="n")
title("Time-ROC (RFS)",cex.main = 1.5)
}
dev.off()
print(sROC$AUC)
# dat = data.frame(fpr = as.numeric(sROC$FP),
#                  tpr = as.numeric(sROC$TP),
#                  time = rep(as.factor(c(quantile[2],quantile[3],quantile[4])),each = nrow(sROC$TP)))
#
# library(ggplot2)
# png(filename = "OS lasso_timeroc1.png", width = 10, height = 10,
#     units = "cm", res = 300, pointsize = 7)
# ggplot() +
#   geom_line(data = dat,aes(x = fpr, y = tpr,color = time),size = 1) +
#   scale_color_manual(name = NULL,values = c("#92C5DE", "#F4A582", "#66C2A5"),
#                      labels = paste0("AUC of ",c(5,10,15),"-y survival: ",
#                                      format(round(sROC$AUC,2),nsmall = 2)))+
#   geom_line(aes(x=c(0,1),y=c(0,1)),color = "grey")+
#   theme_bw()+
#   theme(panel.grid = element_blank(),
#         legend.background = element_rect(linetype = 1, size = 0.2, colour = "black"),
#         legend.position = c(0.765,0.125))+
#   scale_x_continuous(expand = c(0.005,0.005))+
#   scale_y_continuous(expand = c(0.005,0.005))+
#   labs(x = "1 - Specificity",
#        y = "Sensitivity")+
#   coord_fixed()
# dev.off()
#
#
#
if (method == 'OS'){
ROC3 <- timeROC(T=data[,1], delta=data[,2],  marker=data[,5], cause=1, weighting="marginal", times = c(quantile[2],quantile[3],quantile[4]), iid=TRUE)
png(filename = "OS timeROC all fea lasso coef.png", width = 8, height = 8,
units = "cm", res = 300, pointsize = 7)
}else{
ROC3 <- timeROC(T=data[,3], delta=data[,4],  marker=data[,5], cause=1, weighting="marginal", times = c(quantile[2],quantile[3],quantile[4]), iid=TRUE)
png(filename = "RFS timeROC all fea lasso coef.png", width = 8, height = 8,
units = "cm", res = 300, pointsize = 7)
}
plotAUCcurve(ROC3, conf.int=TRUE, conf.band=TRUE,col = "black")
dev.off()
# TP = ROC3$TP
# FP = ROC3$FP
# ROC3$TP = FP
# ROC3$FP = TP
# ROC3$AUC = 1- ROC3$AUC
#计算不同位置不同maker的p值，用补全后的数据，未挑选显著maker；
#用的数据为data[,c(5:19)] = (data[,c(65:79)] + data[,c(95:109)]) / (data[,c(20:34)] + data[,c(50:64)])
rm(list = ls())
library(ggpubr)
library(survminer)
library(survival)
library(glmnet)
setwd("F:/CRC-IHC/lasso cox/")
list.files = list.files(pattern="all fea data*")
#遍历文件夹；
method = 'RFS';
#1:OS,2:RFS;
data = read.csv(list.files[1])
data = data.matrix(data)
s1 = nrow(data)
s2 = ncol(data)
if (method == 'OS'){
mySurv = Surv(data[, 1], data[, 2]);
}else{
mySurv = Surv(data[, 3], data[, 4]);
}
x = data[, 5:s2]
# 10-fold CV
set.seed(1)
cvfit = cv.glmnet(x, mySurv, family = "cox", type.measure = "C")
beta = coef(cvfit, s = "lambda.min")
print(c(15,length(which(beta!=0))))
#lasso_select[num, c(1:length(which(beta!=0)))] = which(beta!=0)
#lasso挑选特征；
# Xbeta = numeric(s1)
# for(j in 1:s1){
#   Xbeta[j] = sum(x[j, ] * beta)
# }
# group = cbind(numeric(s1))
# group = (Xbeta >= median(Xbeta)) + 1
#求出系数，线性组合；
pred = predict(cvfit, newx = x, s = "lambda.min", type="response")
group = cbind(numeric(s1))
mv = median(pred)
group[pred<mv] = 1
group[pred>=mv] = 2
#直接用模型预测；
log1 = survdiff(mySurv ~ group)
p1 = pchisq(log1$chisq, 1, lower.tail=FALSE)
#print(p1)
res.cox = coxph(mySurv ~ group);
cox = summary(res.cox);
if (method == 'OS'){
# plot KM curve
fit = survfit(mySurv ~ group)
n1 = sum(group==1)
leg1 = paste("Low risk(", n1, ")", sep = "")
n2 = sum(group==2)
leg2 = paste("High risk(", n2, ")", sep = "")
png(filename = "KM/OS lasso_.png", width = 5.5, height = 5.5,
units = "cm", res = 300, pointsize = 7)
plot(fit, mark.time=TRUE, xlab = "Months", ylab = "Survival rate", lty = 1:2,
col = 1:2, cex = 0.5)
grid()
legend(x = 94,y = 0.35, legend = c(leg1, leg2), lty = 1:2,
col = 1:2, cex = 0.65)
text(10, 0.1, paste("p=", formatC(p1, format="g", digits = 3), sep = ""),
pos = 4, cex = 1)
title("IHC Progression Score (OS)",cex.main = 1)
dev.off()
}else{
# plot KM curve
fit = survfit(mySurv ~ group)
n1 = sum(group==1)
leg1 = paste("Low risk(", n1, ")", sep = "")
n2 = sum(group==2)
leg2 = paste("High risk(", n2, ")", sep = "")
png(filename = "KM/RFS lasso_.png", width = 5.5, height = 5.5,
units = "cm", res = 300, pointsize = 7)
plot(fit, mark.time=TRUE, xlab = "Months", ylab = "Relapse rate", lty = 1:2,
col = 1:2, cex = 0.5)
grid()
legend(x = 94,y = 0.35, legend = c(leg1, leg2), lty = 1:2,
col = 1:2, cex = 0.65)
text(10, 0.1, paste("p=", formatC(p1, format="g", digits = 3), sep = ""),
pos = 4, cex = 1)
title("IHC Progression Score (RFS)",cex.main = 1)
dev.off()
}
#计算不同位置不同maker的p值，用补全后的数据，未挑选显著maker；
#用的数据为data[,c(5:19)] = (data[,c(65:79)] + data[,c(95:109)]) / (data[,c(20:34)] + data[,c(50:64)])
rm(list = ls())
library(ggpubr)
library(survminer)
library(survival)
library(glmnet)
setwd("F:/CRC-IHC/lasso cox/")
list.files = list.files(pattern="all fea data*")
#遍历文件夹；
method = 'RFS';
#1:OS,2:RFS;
data = read.csv(list.files[1])
data = data.matrix(data)
s1 = nrow(data)
s2 = ncol(data)
if (method == 'OS'){
mySurv = Surv(data[, 1], data[, 2]);
}else{
mySurv = Surv(data[, 3], data[, 4]);
}
x = data[, 5:s2]
# 10-fold CV
set.seed(1)
cvfit = cv.glmnet(x, mySurv, family = "cox", type.measure = "C")
beta = coef(cvfit, s = "lambda.min")
print(c(15,length(which(beta!=0))))
#lasso_select[num, c(1:length(which(beta!=0)))] = which(beta!=0)
#lasso挑选特征；
# Xbeta = numeric(s1)
# for(j in 1:s1){
#   Xbeta[j] = sum(x[j, ] * beta)
# }
# group = cbind(numeric(s1))
# group = (Xbeta >= median(Xbeta)) + 1
#求出系数，线性组合；
pred = predict(cvfit, newx = x, s = "lambda.min", type="response")
group = cbind(numeric(s1))
mv = median(pred)
group[pred<mv] = 1
group[pred>=mv] = 2
#直接用模型预测；
log1 = survdiff(mySurv ~ group)
p1 = pchisq(log1$chisq, 1, lower.tail=FALSE)
#print(p1)
res.cox = coxph(mySurv ~ group);
cox = summary(res.cox);
if (method == 'OS'){
# plot KM curve
fit = survfit(mySurv ~ group)
n1 = sum(group==1)
leg1 = paste("Low risk(", n1, ")", sep = "")
n2 = sum(group==2)
leg2 = paste("High risk(", n2, ")", sep = "")
png(filename = "KM/OS lasso_KM.png", width = 5.5, height = 5.5,
units = "cm", res = 300, pointsize = 7)
plot(fit, mark.time=TRUE, xlab = "Months", ylab = "Survival rate", lty = 1:2,
col = 1:2, cex = 0.5)
grid()
legend(x = 94,y = 0.35, legend = c(leg1, leg2), lty = 1:2,
col = 1:2, cex = 0.65)
text(10, 0.1, paste("p=", formatC(p1, format="g", digits = 3), sep = ""),
pos = 4, cex = 1)
title("IHC Progression Score (OS)",cex.main = 1)
dev.off()
}else{
# plot KM curve
fit = survfit(mySurv ~ group)
n1 = sum(group==1)
leg1 = paste("Low risk(", n1, ")", sep = "")
n2 = sum(group==2)
leg2 = paste("High risk(", n2, ")", sep = "")
png(filename = "KM/RFS lasso_KM.png", width = 5.5, height = 5.5,
units = "cm", res = 300, pointsize = 7)
plot(fit, mark.time=TRUE, xlab = "Months", ylab = "Relapse rate", lty = 1:2,
col = 1:2, cex = 0.5)
grid()
legend(x = 94,y = 0.35, legend = c(leg1, leg2), lty = 1:2,
col = 1:2, cex = 0.65)
text(10, 0.1, paste("p=", formatC(p1, format="g", digits = 3), sep = ""),
pos = 4, cex = 1)
title("IHC Progression Score (RFS)",cex.main = 1)
dev.off()
}
#计算不同位置不同maker的p值，用补全后的数据，未挑选显著maker；
#用的数据为data[,c(5:19)] = (data[,c(65:79)] + data[,c(95:109)]) / (data[,c(20:34)] + data[,c(50:64)])
rm(list = ls())
library(ggpubr)
library(survminer)
library(survival)
library(glmnet)
setwd("F:/CRC-IHC/lasso cox/")
list.files = list.files(pattern="all fea data*")
#遍历文件夹；
method = 'OS';
#1:OS,2:RFS;
data = read.csv(list.files[1])
data = data.matrix(data)
s1 = nrow(data)
s2 = ncol(data)
if (method == 'OS'){
mySurv = Surv(data[, 1], data[, 2]);
}else{
mySurv = Surv(data[, 3], data[, 4]);
}
x = data[, 5:s2]
# 10-fold CV
set.seed(1)
cvfit = cv.glmnet(x, mySurv, family = "cox", type.measure = "C")
beta = coef(cvfit, s = "lambda.min")
print(c(15,length(which(beta!=0))))
#lasso_select[num, c(1:length(which(beta!=0)))] = which(beta!=0)
#lasso挑选特征；
# Xbeta = numeric(s1)
# for(j in 1:s1){
#   Xbeta[j] = sum(x[j, ] * beta)
# }
# group = cbind(numeric(s1))
# group = (Xbeta >= median(Xbeta)) + 1
#求出系数，线性组合；
pred = predict(cvfit, newx = x, s = "lambda.min", type="response")
group = cbind(numeric(s1))
mv = median(pred)
group[pred<mv] = 1
group[pred>=mv] = 2
#直接用模型预测；
log1 = survdiff(mySurv ~ group)
p1 = pchisq(log1$chisq, 1, lower.tail=FALSE)
#print(p1)
res.cox = coxph(mySurv ~ group);
cox = summary(res.cox);
if (method == 'OS'){
# plot KM curve
fit = survfit(mySurv ~ group)
n1 = sum(group==1)
leg1 = paste("Low risk(", n1, ")", sep = "")
n2 = sum(group==2)
leg2 = paste("High risk(", n2, ")", sep = "")
png(filename = "KM/OS lasso_KM.png", width = 5.5, height = 5.5,
units = "cm", res = 300, pointsize = 7)
plot(fit, mark.time=TRUE, xlab = "Months", ylab = "Survival rate", lty = 1:2,
col = 1:2, cex = 0.5)
grid()
legend(x = 94,y = 0.35, legend = c(leg1, leg2), lty = 1:2,
col = 1:2, cex = 0.65)
text(10, 0.1, paste("p=", formatC(p1, format="g", digits = 3), sep = ""),
pos = 4, cex = 1)
title("IHC Progression Score (OS)",cex.main = 1)
dev.off()
}else{
# plot KM curve
fit = survfit(mySurv ~ group)
n1 = sum(group==1)
leg1 = paste("Low risk(", n1, ")", sep = "")
n2 = sum(group==2)
leg2 = paste("High risk(", n2, ")", sep = "")
png(filename = "KM/RFS lasso_KM.png", width = 5.5, height = 5.5,
units = "cm", res = 300, pointsize = 7)
plot(fit, mark.time=TRUE, xlab = "Months", ylab = "Relapse rate", lty = 1:2,
col = 1:2, cex = 0.5)
grid()
legend(x = 94,y = 0.35, legend = c(leg1, leg2), lty = 1:2,
col = 1:2, cex = 0.65)
text(10, 0.1, paste("p=", formatC(p1, format="g", digits = 3), sep = ""),
pos = 4, cex = 1)
title("IHC Progression Score (RFS)",cex.main = 1)
dev.off()
}
